{"version":3,"sources":["connections.js"],"names":["variables","JSON","parse","process","env","VCAP_SERVICES","db_1","DB_1","db_2","DB_2","opts","useNewUrlParser","useUnifiedTopology","mongoose","createConnection","err","issue_tracker_conn","console","log","on","reconnect","sites_conn","response","fault_inbox_db","fault_inbox_conn","conn","dbUrl","attemptNum","arguments","length","undefined","setTimeout","exit","close","open"],"mappings":"aAAA,IAAAA,UAAAC,KAAAC,MAAAC,QAAAC,IAAAC,eAAA,MAEIL,KAAAA,QAAYC,IAAKC,KACjBI,KAAOH,QAAQC,IAAIG,KACnBC,SAAOL,QAAYM,YAEnBC,KAAO,CAACC,iBAAiB,EAAMC,oBAAoB,GAAnDF,mBAAOG,SAAAC,iBAAAR,KAAAI,KAAA,SAACC,EAAuBC,GAO7BG,EAJFC,QAAAA,IAAAA,sBAA8BF,OAIhCG,QAGKC,IAAA,6BAAAZ,MAIHU,mBAAmBG,GAAG,eAAgB,WACpCF,QAAQC,IAAI,uCACZE,UAAUJ,mBAAoBV,KAAMI,WAOxCW,WAASR,SAAAC,iBAAAN,KAAAE,KAAA,SAAAK,EAAAO,GACPL,EADFA,QAGKC,IAAA,sBAAAV,OAIHa,QAAAA,IAAWF,6BAA8BX,MAGxCa,WAHDF,GAAA,eAAA,WAIDF,QAAAC,IAAA,uCAGHE,UAAAC,WAAAb,KAAAE,WAIsDa,eAAA,0BAFlDC,iBAAmB,GAInBP,SAAAA,UAAYQ,EAAAC,EAAAhB,GAAoC,IAApCiB,EAAoC,EAAAC,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApC,EACZG,GAAW,EAAXA,EAID,OAHG5B,QAAAA,IAAQ6B,0BAASN,EAAA,0BAClBK,WAJiB,WAGhB5B,QAAQ6B,KAAK,IAEf,MAIFP,QAAKQ,IAAL,8BAAAP,EAAA,cAAAC,GACAI,EAAAA,QACEN,WAAA,WACEA,EAAAS,KAAAR,EAAShB,EAAA,SAAAK,GACPE,GACAG,QAAAA,IAAUK,sBAAmBE,EAA7B,OAAAD,EAAA,WAFFN,UAIKK,EAAAC,EAAAhB,EAAAiB,EAAA,IALPV,QAAAC,IAAA,kBAAAQ,EAAA,oBASC,KAKHL,OAAAA,QAAAA,CACAG,mBAAAA,mBADAH,WAAAA,WACAG,iBAAAA","file":"connections.min.js","sourcesContent":["//option two\r\n\r\nvar variables = JSON.parse(process.env.VCAP_SERVICES || '{}')\r\nvar db_1 = process.env.DB_1;\r\nvar db_2 = process.env.DB_2;\r\nvar mongoose = require('mongoose');\r\nvar opts = {useNewUrlParser: true, useUnifiedTopology: true};\r\n\r\n// Issue Tracker DB\r\nvar issue_tracker_conn = mongoose.createConnection(db_1, opts, function(\r\n  err,\r\n  response\r\n) {\r\n  if (err) {\r\n    console.log('Fail to connect to ' + db_1);\r\n  }\r\n  else {\r\n    console.log('Successfully connected to ' + db_1);\r\n\r\n    // Handle database disconnection\r\n    issue_tracker_conn.on('disconnected', function() {\r\n      console.log('Lost connection to Issue Tracker DB');\r\n      reconnect(issue_tracker_conn, db_1, opts);\r\n    });\r\n  }\r\n});\r\n\r\n// Stations Info DB\r\nvar sites_conn = mongoose.createConnection(db_2, opts, function(err, response) {\r\n  if (err) {\r\n    console.log('Fail to connect to ' + db_2);\r\n  }\r\n  else {\r\n    console.log('Successfully connected to ' + db_2);\r\n\r\n    // Handle database disconnection\r\n    sites_conn.on('disconnected', function() {\r\n      console.log('Lost connection to Stations Info DB');\r\n      reconnect(sites_conn, db_2, opts);\r\n    });\r\n  }\r\n});\r\n\r\n// Fault Inbox DB\r\nvar fault_inbox_db = '% DB string goes here %';\r\nvar fault_inbox_conn = {}; // Your Fault Inbox DB connction code goes here;\r\n\r\nfunction reconnect(conn, dbUrl, opts, attemptNum = 1) {\r\n  if (attemptNum > 3) {\r\n    console.log('Failed to reconnect to ' + dbUrl + ' after 3 attempts');\r\n    setTimeout(function() {\r\n      process.exit(1); // return non-zero to restart application\r\n    }, 120000); // wait for 2 minutes before returning non-zero exit code\r\n    return;\r\n  }\r\n  \r\n  console.log('Attempting to reconnect to ' + dbUrl + ', attempt #' + attemptNum);\r\n  conn.close();\r\n  setTimeout(function() {\r\n    conn.open(dbUrl, opts, function(err) {\r\n      if (err) {\r\n        console.log('Reconnect attempt #' + attemptNum + ' to ' + dbUrl + ' failed');\r\n        reconnect(conn, dbUrl, opts, attemptNum + 1);\r\n      }\r\n      else {\r\n        console.log('Reconnected to ' + dbUrl + ' successfully');\r\n      }\r\n    });\r\n  }, 60000); // wait 60 seconds before each reconnection attempt\r\n}\r\n\r\nmodule.exports = {\r\n  issue_tracker_conn,\r\n  sites_conn,\r\n  fault_inbox_conn\r\n};\r\n\r\n\r\n//option one\r\n/*\r\nvar variables = JSON.parse(process.env.VCAP_SERVICES || '{}')\r\nvar db_1 = process.env.DB_1;\r\nvar db_2 = process.env.DB_2;\r\nconsole.log('variables', variables);\r\nvar mongoose = require('mongoose');\r\nvar opts = {useNewUrlParser: true, useUnifiedTopology: true};\r\n\r\n// Issue Tracker DB\r\nvar issue_tracker_conn = mongoose.createConnection(db_1, opts, function(\r\n  err,\r\n  response\r\n) {\r\n  if (err) {\r\n    console.log('Fail to connect to ' + db_1);\r\n  }\r\n  else {\r\n    console.log('Successfully connected to ' + db_1);\r\n\r\n    // Handle database disconnection\r\n    issue_tracker_conn.on('disconnected', function() {\r\n      console.log('Lost connection to Issue Tracker DB');\r\n      setTimeout(function() {\r\n        process.exit(1); // return non-zero to restart application\r\n      }, 120000); // wait for 2 minutes before returning non-zero exit code\r\n    });\r\n  }\r\n});\r\n\r\n// Stations Info DB\r\nvar sites_conn = mongoose.createConnection(db_2, opts, function(err, response) {\r\n  if (err) {\r\n    console.log('Fail to connect to ' + db_2);\r\n  }\r\n  else {\r\n    console.log('Successfully connected to ' + db_2);\r\n\r\n    // Handle database disconnection\r\n    sites_conn.on('disconnected', function() {\r\n      console.log('Lost connection to Stations Info DB');\r\n      setTimeout(function() {\r\n        process.exit(1); // return non-zero to restart application\r\n      }, 120000); // wait for 2 minutes before returning non-zero exit code\r\n    });\r\n  }\r\n});\r\n\r\n// Fault Inbox DB\r\nvar fault_inbox_db = '% DB string goes here %';\r\nvar fault_inbox_conn = {}; // Your Fault Inbox DB connction code goes here;\r\n\r\nmodule.exports = {\r\n  issue_tracker_conn,\r\n  sites_conn,\r\n  fault_inbox_conn\r\n}; \r\n*/\r\n\r\n\r\n//Original code\r\n\r\n/* var variables = JSON.parse(process.env.VCAP_SERVICES || '{}')\r\nvar db_1 = process.env.DB_1;\r\nvar db_2 = process.env.DB_2;\r\nconsole.log('variables', variables);\r\nvar mongoose = require('mongoose');\r\n// var opts = {uri_decode_auth: true};\r\nvar opts = {useNewUrlParser: true, useUnifiedTopology: true};\r\n\r\n// Issue Tracker DB\r\nvar issue_tracker_conn = mongoose.createConnection(db_1, opts, function(\r\n  err,\r\n  response\r\n) {\r\n  if (err) console.log('Fail to connect to ' + db_1);\r\n  else console.log('Successfully connected to ' + db_1);\r\n});\r\n\r\n// Stations Info DB\r\nvar sites_conn = mongoose.createConnection(db_2, opts, function(err, response) {\r\n  if (err) console.log('Fail to connect to ' + db_2);\r\n  else console.log('Successfully connected to ' + db_2);\r\n});\r\n\r\n// Fault Inbox DB\r\nvar fault_inbox_db = '% DB string goes here %';\r\nvar fault_inbox_conn = {}; // Your Fault Inbox DB connction code goes her;\r\n\r\nmodule.exports = {\r\n  issue_tracker_conn,\r\n  sites_conn,\r\n  fault_inbox_conn\r\n}; */\r\n"]}